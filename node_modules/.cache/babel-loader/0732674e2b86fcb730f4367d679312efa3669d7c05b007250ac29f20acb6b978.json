{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\site4\\\\src\\\\SettingsContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SettingsContext = /*#__PURE__*/createContext();\nexport const SettingsProvider = ({\n  children\n}) => {\n  _s();\n  const [settings, setSettings] = useState({\n    theme: 'light',\n    language: 'english',\n    displayPreferences: 'standard'\n  });\n  const updateSettings = newSettings => {\n    setSettings({\n      ...settings,\n      ...newSettings\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(SettingsContext.Provider, {\n    value: {\n      settings,\n      updateSettings\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(SettingsProvider, \"67kagQNLNPM+JeHGbkBYr8loCW8=\");\n_c = SettingsProvider;\nexport const useSettings = () => {\n  _s2();\n  return useContext(SettingsContext);\n};\n_s2(useSettings, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"SettingsProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","SettingsContext","SettingsProvider","children","_s","settings","setSettings","theme","language","displayPreferences","updateSettings","newSettings","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useSettings","_s2","$RefreshReg$"],"sources":["C:/Users/User/site4/src/SettingsContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\n\r\nconst SettingsContext = createContext();\r\n\r\nexport const SettingsProvider = ({ children }) => {\r\n  const [settings, setSettings] = useState({\r\n    theme: 'light',\r\n    language: 'english',\r\n    displayPreferences: 'standard',\r\n  });\r\n\r\n  const updateSettings = (newSettings) => {\r\n    setSettings({ ...settings, ...newSettings });\r\n  };\r\n\r\n  return (\r\n    <SettingsContext.Provider value={{ settings, updateSettings }}>\r\n      {children}\r\n    </SettingsContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useSettings = () => {\r\n  return useContext(SettingsContext);\r\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,eAAe,gBAAGL,aAAa,CAAC,CAAC;AAEvC,OAAO,MAAMM,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC;IACvCS,KAAK,EAAE,OAAO;IACdC,QAAQ,EAAE,SAAS;IACnBC,kBAAkB,EAAE;EACtB,CAAC,CAAC;EAEF,MAAMC,cAAc,GAAIC,WAAW,IAAK;IACtCL,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,GAAGM;IAAY,CAAC,CAAC;EAC9C,CAAC;EAED,oBACEX,OAAA,CAACC,eAAe,CAACW,QAAQ;IAACC,KAAK,EAAE;MAAER,QAAQ;MAAEK;IAAe,CAAE;IAAAP,QAAA,EAC3DA;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAACb,EAAA,CAhBWF,gBAAgB;AAAAgB,EAAA,GAAhBhB,gBAAgB;AAkB7B,OAAO,MAAMiB,WAAW,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC/B,OAAOvB,UAAU,CAACI,eAAe,CAAC;AACpC,CAAC;AAACmB,GAAA,CAFWD,WAAW;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}